# This is a basic workflow to help you get started with Actions

name: Frontend Deploy YML

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [draft]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-18.04

    env:
      working-directory: ./frontend

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout source code
        uses: actions/checkout@v2

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: "14"

      - name: Generate Environment Variables File
        run: |
          touch .env
          echo REACT_APP_SERVER=${{ secrets.REACT_APP_SERVER }} >> .env
          echo REACT_APP_GOOGLE_API_KEY=${{ secrets.REACT_APP_GOOGLE_API_KEY }} >> .env
          echo REACT_APP_KAKAO_API_KEY=${{ secrets.REACT_APP_KAKAO_API_KEY }} >> .env
          echo REACT_APP_FACEBOOK_API_KEY=${{ secrets.REACT_APP_FACEBOOK_API_KEY }} >> .env

      - name: Install AWS CLI
        run: pip3 install awscli --upgrade --user

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_S3_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_S3_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
          mask-aws-account-id: true

      - name: Install Dependencies
        run: yarn
        working-directory: ${{ env.working-directory }}

      - name: Build
        run: yarn build
        working-directory: ${{ env.working-directory }}

      - name: Deploy
        run: aws s3 sync ./build s3://modimoa
        working-directory: ${{ env.working-directory }}

      - name: Invalidate CloudFront Cache
        run: aws cloudfront create-invalidation --distribution-id ${{ secrets.AWS_CLOUDFRONT_DISTRIBUTION_ID }} --paths "/*"
